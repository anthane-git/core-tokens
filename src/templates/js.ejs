/**
* Do not edit directly
* Generated on <%= new Date().toUTCString() %>
*/

// Color Tokens
export const colors = {
light: {
<% _.each(allProperties, (prop) => {
   if(!prop.name.includes('light')) return %> <%= prop.name.replace('light', '') %>: "<%= prop.value %>",
<% }); %> },

dark: {
<% _.each(allProperties, (prop) => {
   if(!prop.name.includes('dark')) return %> <%= prop.name.replace('dark', '') %>: "<%= prop.value %>",
<% }); %> }
};

// Spacing Tokens
export const spacing = {
small: {
<% _.each(allProperties, (prop) => {
   if(!prop.name.includes('spacingSmall')) return %> <%= prop.name.replace('spacingSmall', '') %>: "<%= prop.value %>px",
<% }); %> },

medium: {
<% _.each(allProperties, (prop) => {
   if(!prop.name.includes('spacingMedium')) return %> <%= prop.name.replace('spacingMedium', '') %>: "<%= prop.value %>px",
<% }); %> },

large: {
<% _.each(allProperties, (prop) => {
   if(!prop.name.includes('spacingLarge')) return %> <%= prop.name.replace('spacingLarge', '') %>: "<%= prop.value %>px",
<% }); %> }
};